{"_id":"svg.filter.js","_rev":"8-87e4948f821544982c85fda7512bafa9","name":"svg.filter.js","description":"A plugin for svg.js adding filter functionality","dist-tags":{"latest":"2.0.2"},"versions":{"1.0.0":{"name":"svg.filter.js","version":"1.0.0","description":"A plugin for [svg.js](http://svgjs.com) adding filter functionality.","main":"svg.filter.js","scripts":{"test":"echo \"Error: no test specified\" && exit 1"},"repository":{"type":"git","url":"git+https://github.com/wout/svg.filter.js.git"},"author":{"name":"Wout"},"license":"ISC","bugs":{"url":"https://github.com/wout/svg.filter.js/issues"},"homepage":"https://github.com/wout/svg.filter.js#readme","gitHead":"60bf5131c652c728b56657f017bb21b391627d4b","_id":"svg.filter.js@1.0.0","_shasum":"4272931f216e6c106e0870b3c2fc7ea5196eefc5","_from":".","_npmVersion":"2.10.1","_nodeVersion":"0.12.2","_npmUser":{"name":"brandondurham","email":"brandon@smallparade.com"},"dist":{"shasum":"4272931f216e6c106e0870b3c2fc7ea5196eefc5","tarball":"https://registry.npmjs.org/svg.filter.js/-/svg.filter.js-1.0.0.tgz","integrity":"sha512-TkNB4X3vla/Y2+km2JhfSPYmJN8J2+LC3wkjIg2W7Ui55OKAVLgSW/LIzkgMBeB0ZpF9SkZwuICIkKSEAYB+tg==","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEQCIHNxnjcLiZuxayZEApluYkRwRw9nvpCb+mEp8QdWbVzjAiBn+wMtlwoqWdnDzjdYjUlNTypm5ywBTpR1uaDm4BPpUw=="}]},"maintainers":[{"name":"brandondurham","email":"brandon@smallparade.com"}]},"2.0.0":{"name":"svg.filter.js","version":"2.0.0","description":"A plugin for svg.js adding filter functionality","keywords":["svg.js","filter","effect"],"bugs":{"url":"https://github.com/wout/svg.filter.js/issues"},"license":"MIT","author":{"name":"Wout Fierens"},"contributors":{"name":"Wout Fierens"},"homepage":"https://github.com/wout/svg.filter.js","files":["dist/"],"repository":{"type":"git","url":"git+https://github.com/wout/svg.filter.js.git"},"engines":{"node":">= 0.8.0"},"devDependencies":{"grunt-contrib-jshint":"~0.10.0","grunt-contrib-concat":"~0.3.0","grunt-contrib-uglify":"~0.2.0","grunt-contrib-watch":"~0.4.0","grunt-contrib-clean":"~0.4.0","grunt":"~0.4.5"},"dependencies":{"svg.js":"^2.2.5"},"gitHead":"d0ea5534fdef25bdb6bce84c9b35d16e5547de12","_id":"svg.filter.js@2.0.0","scripts":{},"_shasum":"39d7381a66ed37802a28a5c5ee6e25d94f42f6bf","_from":".","_npmVersion":"3.7.1","_nodeVersion":"4.3.0","_npmUser":{"name":"fuzzyma","email":"ulima.ums@googlemail.com"},"dist":{"shasum":"39d7381a66ed37802a28a5c5ee6e25d94f42f6bf","tarball":"https://registry.npmjs.org/svg.filter.js/-/svg.filter.js-2.0.0.tgz","integrity":"sha512-3K5C/agOWVKTI0YZsguS/3U5aPmZ9cVHpkAN3h5EHgw+9WEjBQ58fzeIpT5FchhlhP9WldHpp5AdqYgWuEZy0w==","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIA9gBNNCs9+96DIAQSjMOwAAoJRlr1LJ7sOr6FcBAlM/AiEA4w/dbiuna7QJcmDW1FnJqquRpab1JRt4nbdvTiAwN/8="}]},"maintainers":[{"name":"fuzzyma","email":"ulima.ums@googlemail.com"}],"_npmOperationalInternal":{"host":"packages-9-west.internal.npmjs.com","tmp":"tmp/svg.filter.js-2.0.0.tgz_1456276148390_0.4061182385776192"}},"2.0.1":{"name":"svg.filter.js","version":"2.0.1","description":"A plugin for svg.js adding filter functionality","keywords":["svg.js","filter","effect"],"bugs":{"url":"https://github.com/wout/svg.filter.js/issues"},"license":"MIT","author":{"name":"Wout Fierens"},"contributors":{"name":"Wout Fierens"},"homepage":"https://github.com/wout/svg.filter.js","main":"dist/svg.js","files":["dist/"],"repository":{"type":"git","url":"git+https://github.com/wout/svg.filter.js.git"},"engines":{"node":">= 0.8.0"},"devDependencies":{"grunt-contrib-jshint":"~0.10.0","grunt-contrib-concat":"~0.3.0","grunt-contrib-uglify":"~0.2.0","grunt-contrib-watch":"~0.4.0","grunt-contrib-clean":"~0.4.0","grunt":"~0.4.5"},"dependencies":{"svg.js":"^2.2.5"},"gitHead":"9673589b1d67bdc90727bff918e90f19134a3c44","_id":"svg.filter.js@2.0.1","scripts":{},"_shasum":"88f59af09a84727ec1a2adde948e3075cffbbd8b","_from":".","_npmVersion":"3.7.1","_nodeVersion":"4.3.0","_npmUser":{"name":"fuzzyma","email":"ulima.ums@googlemail.com"},"dist":{"shasum":"88f59af09a84727ec1a2adde948e3075cffbbd8b","tarball":"https://registry.npmjs.org/svg.filter.js/-/svg.filter.js-2.0.1.tgz","integrity":"sha512-QtMUmYrjNtydHW6BZGts9Ypu/ndVrMy9GizCcB+KdW8L2izY98WgHFGHZBYofgqtVh+Z2k3iNL/dbf6ftubmcg==","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQCYJkci5vwnYEnR0igTD58mYB/GjzBbDCAXaFoTq8YP7QIgU9eRh4r5gdLYrOJRwSyXlu05VV4iN48P7iqPx8FBLME="}]},"maintainers":[{"name":"fuzzyma","email":"ulima.ums@googlemail.com"}],"_npmOperationalInternal":{"host":"packages-6-west.internal.npmjs.com","tmp":"tmp/svg.filter.js-2.0.1.tgz_1456331371087_0.7990074397530407"}},"2.0.2":{"name":"svg.filter.js","version":"2.0.2","description":"A plugin for svg.js adding filter functionality","keywords":["svg.js","filter","effect"],"bugs":{"url":"https://github.com/wout/svg.filter.js/issues"},"license":"MIT","author":{"name":"Wout Fierens"},"contributors":{"name":"Wout Fierens"},"homepage":"https://github.com/wout/svg.filter.js","main":"dist/svg.filter.js","files":["dist/"],"repository":{"type":"git","url":"git+https://github.com/wout/svg.filter.js.git"},"engines":{"node":">= 0.8.0"},"devDependencies":{"grunt-contrib-jshint":"~0.10.0","grunt-contrib-concat":"~0.3.0","grunt-contrib-uglify":"~0.2.0","grunt-contrib-watch":"~0.4.0","grunt-contrib-clean":"~0.4.0","grunt":"~0.4.5"},"dependencies":{"svg.js":"^2.2.5"},"gitHead":"23c7c5ec6df47c9a61b1fec20f08828b66fe2c4b","_id":"svg.filter.js@2.0.2","scripts":{},"_shasum":"91008e151389dd9230779fcbe6e2c9a362d1c203","_from":".","_npmVersion":"3.7.1","_nodeVersion":"4.3.0","_npmUser":{"name":"fuzzyma","email":"ulima.ums@googlemail.com"},"dist":{"shasum":"91008e151389dd9230779fcbe6e2c9a362d1c203","tarball":"https://registry.npmjs.org/svg.filter.js/-/svg.filter.js-2.0.2.tgz","integrity":"sha512-xkGBwU+dKBzqg5PtilaTb0EYPqPfJ9Q6saVldX+5vCRy31P6TlRCP3U9NxH3HEufkKkpNgdTLBJnmhDHeTqAkw==","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQDjRfUz03iqzQ/S4zfab20fd6GBGSUnEXPk22ikncJQZQIhAKyWIRjNFCnH1p1gLMJZPbjcDX0Lhz6fYAYq3X9B/uph"}]},"maintainers":[{"name":"fuzzyma","email":"ulima.ums@googlemail.com"}],"_npmOperationalInternal":{"host":"packages-9-west.internal.npmjs.com","tmp":"tmp/svg.filter.js-2.0.2.tgz_1456333863972_0.6463817371986806"}}},"readme":"# svg.filter.js\r\n\r\nA plugin for [svg.js](http://svgjs.com) adding filter functionality.\r\n\r\nSvg.filter.js is licensed under the terms of the MIT License.\r\n\r\n- [Examples](#examples)\r\n- [Furthermore](#furthermore)\r\n    - [unfilter](#unfilter)\r\n    - [referencing the filter node](#referencing-the-filter-node)\r\n    - [Animating filter values](#animating-filter-values)\r\n    - [Chaining Effects](#chaining-effects)\r\n- [Effect Classes](#effect-classes)\r\n\r\n## Usage\r\nInclude this plugin after including the svg.js library in your html document.\r\n\r\nFor a few visual examples look at the [svg.js filter page](http://svgjs.com/filter).\r\n\r\nHere is how each filter effect on the example page is achieved.\r\n\r\n\r\n## Examples\r\n- [gaussian blur](#gaussian-blur)\r\n- [horizontal blur](#horizontal-blur)\r\n- [desaturate](#desaturate)\r\n- [contrast](#contrast)\r\n- [sepiatone](#sepiatone)\r\n- [hue rotate 180](#hue-rotate-180)\r\n- [luminance to alpha](#luminance-to-alpha)\r\n- [colorize](#colorize)\r\n- [posterize](#posterize)\r\n- [darken](#darken)\r\n- [lighten](#lighten)\r\n- [invert](#invert)\r\n- [gamma correct 1](#gamma-correct-1)\r\n- [gamma correct 2](#gamma-correct-2)\r\n- [drop shadow](#drop-shadow)\r\n- [extrude](#extrude)\r\n\r\n### original\r\n\r\n```javascript\r\nvar image = draw.image('path/to/image.jpg').size(300, 300)\r\n```\r\n\r\n### gaussian blur\r\n\r\n```javascript\r\nimage.filter(function(add) {\r\n  add.gaussianBlur(30)\r\n})\r\n```\r\n\r\n### horizontal blur\r\n\r\n```javascript\r\nimage.filter(function(add) {\r\n  add.gaussianBlur(30, 0)\r\n})\r\n```\r\n\r\n### desaturate\r\n\r\n```javascript\r\nimage.filter(function(add) {\r\n  add.colorMatrix('saturate', 0)\r\n})\r\n```\r\n\r\n### contrast\r\n\r\n```javascript\r\nimage.filter(function(add) {\r\n  var amount = 1.5\r\n\r\n  add.componentTransfer({\r\n    rgb: { type: 'linear', slope: amount, intercept: -(0.3 * amount) + 0.3 }\r\n  })\r\n})\r\n```\r\n\r\n### sepiatone\r\n\r\n```javascript\r\nimage.filter(function(add) {\r\n  add.colorMatrix('matrix', [ .343, .669, .119, 0, 0\r\n                            , .249, .626, .130, 0, 0\r\n                            , .172, .334, .111, 0, 0\r\n                            , .000, .000, .000, 1, 0 ])\r\n})\r\n```\r\n\r\n### hue rotate 180\r\n\r\n```javascript\r\nimage.filter(function(add) {\r\n  add.colorMatrix('hueRotate', 180)\r\n})\r\n```\r\n\r\n### luminance to alpha\r\n\r\n```javascript\r\nimage.filter(function(add) {\r\n  add.colorMatrix('luminanceToAlpha')\r\n})\r\n```\r\n\r\n### colorize\r\n\r\n```javascript\r\nimage.filter(function(add) {\r\n  add.colorMatrix('matrix', [ 1.0, 0,   0,   0,   0\r\n                            , 0,   0.2, 0,   0,   0\r\n                            , 0,   0,   0.2, 0,   0\r\n                            , 0,   0,   0,   1.0, 0 ])\r\n})\r\n```\r\n\r\n### posterize\r\n\r\n```javascript\r\nimage.filter(function(add) {\r\n  add.componentTransfer({\r\n    rgb: { type: 'discrete', tableValues: [0, 0.2, 0.4, 0.6, 0.8, 1] }\r\n  })\r\n})\r\n```\r\n\r\n### darken\r\n\r\n```javascript\r\nimage.filter(function(add) {\r\n  add.componentTransfer({\r\n    rgb: { type: 'linear', slope: 0.2 }\r\n  })\r\n})\r\n```\r\n\r\n### lighten\r\n\r\n```javascript\r\nimage.filter(function(add) {\r\n  add.componentTransfer({\r\n    rgb: { type: 'linear', slope: 1.5, intercept: 0.2 }\r\n  })\r\n})\r\n```\r\n\r\n### invert\r\n\r\n```javascript\r\nimage.filter(function(add) {\r\n  add.componentTransfer({\r\n    rgb: { type: 'table', tableValues: [1, 0] }\r\n  })\r\n})\r\n```\r\n\r\n### gamma correct 1\r\n\r\n```javascript\r\nimage.filter(function(add) {\r\n  add.componentTransfer({\r\n    g: { type: 'gamma', amplitude: 1, exponent: 0.5 }\r\n  })\r\n})\r\n```\r\n\r\n### gamma correct 2\r\n\r\n```javascript\r\nimage.filter(function(add) {\r\n  add.componentTransfer({\r\n    g: { type: 'gamma', amplitude: 1, exponent: 0.5, offset: -0.1 }\r\n  })\r\n})\r\n```\r\n\r\n\r\n### drop shadow\r\nYou will notice that all the effect descriptions have a drop shadow. Here is how this drop shadow can be achieved:\r\n\r\n```javascript\r\nvar text = draw.text('SVG text with drop shadow').fill('#fff')\r\n\r\ntext.filter(function(add) {\r\n  var blur = add.offset(0, 1).in(add.sourceAlpha).gaussianBlur(1)\r\n\r\n  add.blend(add.source, blur)\r\n})\r\n```\r\n\r\nThis technique can be achieved on any other shape of course:\r\n\r\n```javascript\r\nvar rect = draw.rect(100,100).fill('#f09').stroke({ width: 3, color: '#0f9' }).move(10,10)\r\n\r\nrect.filter(function(add) {\r\n  var blur = add.offset(20, 20).in(add.sourceAlpha).gaussianBlur(5)\r\n\r\n  add.blend(add.source, blur)\r\n\r\n  this.size('200%','200%').move('-50%', '-50%')\r\n})\r\n```\r\n\r\nIf the drop shadow should get the colour of the shape so it appears like coloured glass:\r\n\r\n```javascript\r\nvar rect = draw.rect(100,100).fill('#f09').stroke({ width: 3, color: '#0f9' }).move(10,10)\r\n\r\nrect.filter(function(add) {\r\n  var blur = add.offset(20, 20).gaussianBlur(5)\r\n\r\n  add.blend(add.source, blur)\r\n\r\n  this.size('200%','200%').move('-50%', '-50%')\r\n})\r\n```\r\n\r\n### extrude\r\n```javascript\r\nimage.filter(function(add){\r\n  var matrix = add.convolveMatrix([\r\n    1,0,0,0,0,0,\r\n    0,1,0,0,0,0,\r\n    0,0,1,0,0,0,\r\n    0,0,0,1,0,0,\r\n    0,0,0,0,1,0,\r\n    0,0,0,0,0,1\r\n  ]).attr({\r\n    devisor: '2',\r\n    preserveAlpha: 'false'\r\n  }).in(add.sourceAlpha)\r\n\r\n  //recolor it\r\n  var color = add.composite(add.flood('#ff2222'),matrix,'in');\r\n\r\n  //merge all of them toggether\r\n  add.merge(color,add.source);\r\n})\r\n```\r\n\r\n\r\n## Furthermore\r\nSome more features you should know about.\r\n\r\n### unfilter\r\nThe `unfilter` method removes the filter attribute from the node:\r\n\r\n```javascript\r\nimage.unfilter()\r\n```\r\n\r\nThis will return the element to its original state but will retain the filter in the defs node. If the filter node should be removed as well, simply pass the `true` as the first argument:\r\n\r\n```javascript\r\nimage.unfilter(true)\r\n```\r\n\r\n\r\n### referencing the filter node\r\nAn internal reference to the filter node is made in the element:\r\n\r\n```javascript\r\nimage.filterer\r\n```\r\n\r\nThis can also be very useful to reuse an existing filter on various elements:\r\n\r\n```javascript\r\notherImage.filter(image.filterer)\r\n```\r\n\r\n### Animating filter values\r\nEvery filter value can be animated as well:\r\n\r\n```javascript\r\nvar hueRotate\r\n\r\nimage.filter(function(add) {\r\n  hueRotate = add.colorMatrix('hueRotate', 0)\r\n})\r\n\r\nhueRotate.animate(3000).attr('values', 360)\r\n```\r\n\r\n### Chaining Effects\r\n\r\n[Method chaining](https://en.wikipedia.org/wiki/Method_chaining) is a programing style where each function retures the object it blongs to, for an example look at JQuery.<br>\r\nits posible to chain the effects on a filter when you are creating them, for example\r\n```javascript\r\nimage.filter(function(add){\r\n  add.flood('black',0.5).composite(add.sourceAlpha,'in').offset(10).merge(add.source)\r\n})\r\n```\r\n\r\nthis would create a basic shadow filter where the first input on the `composite` effect would be the `flood` effect, and the input on the offset effect would be the `composite` effect.<br>\r\nsame with the `merge` effect, its first input would be the `offset` effect, and its second input would be `add.source`\r\n\r\nsome effects like [Merge](#merge), [Blend](blend), [Composite](#composite), [DisplacementMap](displacementmap) have thier arguments changed when they are chained, for example\r\n```javascript\r\nimage.filter(function(add){\r\n  add.flood('black',0.5).composite(add.sourceAlpha,'in')\r\n})\r\n```\r\nthe `composite` effects first input is set to the `flood` effect and its second input becomes the first argument, this is the same for the merge, blend, composite, and displacmentMap effect. <br>\r\nfor more details check out each effects doc below\r\n\r\n## Effect Classes\r\n\r\n- [Base Effect Class](base-effect-class)\r\n- [Blend](#blend)\r\n- [ColorMatrix](#colormatrix)\r\n- [ComponentTransfer](#componenttransfer)\r\n- [Composite](#composite)\r\n- [ConvolveMatrix](#convolvematrix)\r\n- [DiffuseLighting](#diffuseLighting)\r\n- [DisplacementMap](#displacementmap)\r\n- [Flood](#flood)\r\n- [GaussianBlur](#gaussianglur)\r\n- [Image](#image)\r\n- [Merge](#merge)\r\n- [Morphology](#morphology)\r\n- [Offset](#offset)\r\n- [SpecularLighting](#specularlighting)\r\n- [Tile](#tile)\r\n- [Turbulence](#turbulence)\r\n\r\n### Base Effect Class\r\n\r\n#### in(effect)\r\n  gets or sets the `in` attribute of the effect\r\n  some effect like [Blend](blend), [Composite](#composite), [DisplacementMap](displacementmap) have a `in2` function, it works the same as the as\r\n\r\n  - **effect:** this can be another effect or a string <br>\r\n    if **effect** is not provided it will look for another effect on the same filter whos `result` is equal to this effects `in`, else it will return the value of the `in` attribute\r\n    ```javascript\r\n    image.filter(function(add){\r\n      var offset = add.offset(10)\r\n\r\n      //create the blur effect and then set its input\r\n      var blur = add.gaussianBlur(3)\r\n\r\n      //set the input to an effect\r\n      blur.in(offset)\r\n\r\n      //this will return the offset effect\r\n      var input = blur.in()\r\n\r\n      //set the input to a string\r\n      blur.in('another-result-as-a-string')\r\n\r\n      //this will return a string since there is no other effect which has a matching result attribute\r\n      var input2 = blur.in()\r\n    })\r\n    ```\r\n\r\n#### result(string)\r\n  gets or sets the `result` attribute of the effect\r\n\r\n  - **string:** if no string if provided it will act as a getter and return the value of the `result` attruibute\r\n\r\n### Blend\r\n\r\n[W3 doc](https://www.w3.org/TR/SVG/filters.html#feBlendElement)\r\n\r\n```javascript\r\nfilter.blend(in1, in2, mode)\r\n//or\r\nnew SVG.BlendEffect(in1, in2, mode)\r\n```\r\n\r\n- **in1**: an effect or the result of effect\r\n- **in2**: same as **in1**\r\n- **mode**: \"normal | multiply | screen | darken | lighten\" defaults to \"normal\"\r\n\r\n**chaining** when this effect is called right after another effect, for example:\r\n```javascript\r\nfilter.offset(10).blend(filter.source)\r\n```\r\nthe first input is set to the `offset` effect and the second input is set to `filter.source` or what ever was passed as the first argument, and the second input becomes the **mode**\r\n\r\n### ColorMatrix\r\n\r\n[W3 doc](https://www.w3.org/TR/SVG/filters.html#feColorMatrixElement)\r\n\r\n```javascript\r\nfilter.colorMatrix(type, values);\r\n//or\r\nnew SVG.ColorMatrixEffect(type, values);\r\n```\r\n\r\n- **type**: \"matrix | saturate | hueRotate | luminanceToAlpha\"\r\n- **values**\r\n  - **type=\"matrix\"**: values would be a matrix the size of 4x5\r\n  - **type=\"saturate\"**: number (0 to 1)\r\n  - **type=\"hueRotate\"**: number (0 to 360) deg\r\n  - **type=\"luminanceToAlpha\"**: value not needed\r\n\r\n### ComponentTransfer\r\n\r\n[W3 doc](https://www.w3.org/TR/SVG/filters.html#feComponentTransferElement)\r\n\r\n```javascript\r\nfilter.componentTransfer(components);\r\n//or\r\nnew SVG.ComponentTransferEffect(components);\r\n```\r\n\r\n- **components**: an object with one `rgb` property for the (r, g and b) chanels or `r`, `g`, `b`, `a` properties for each chanel\r\n  ```javascript\r\n  {\r\n    rgb: {\r\n      type: \"identity | table | discrete | linear | gamma\",\r\n\r\n      //type=\"table\"\r\n      tableValues: \"0 0.5 2 1\", //number sperated by spaces\r\n\r\n      //type=\"linear\"\r\n      slope: 1, //number\r\n      intercept: 3,//number\r\n\r\n      //type=\"gamma\"\r\n      amplitude: 0, //number\r\n      exponent: 0, //number\r\n      offset: 0 //number\r\n    }\r\n  }\r\n  ```\r\n\r\n### Composite\r\n\r\n[W3 doc](https://www.w3.org/TR/SVG/filters.html#feCompositeElement)\r\n\r\n```javascript\r\nfilter.composite(in1, in2, operator);\r\n//or\r\nnew SVG.CompositeEffect(in1, in2, operator);\r\n```\r\n\r\n- **in1**: an effect or the result of an effect\r\n- **in2**: same as **in1**\r\n- **operator**: \"over | in | out | atop | xor | arithmetic\" defaults to \"over\"\r\n\r\n**chaining** when this effect is called right after another effect, for example:\r\n```javascript\r\nfilter.flood('black',0.5).composite(filter.sourceAlpha,'in')\r\n```\r\nthe first input is set to the `flood` effect and the second input is set to `filter.sourceAlpha` or what ever was passed as the first argument.<br>\r\nalso the second argument becomes the **operator**\r\n\r\n### ConvolveMatrix\r\n\r\n[W3 doc](https://www.w3.org/TR/SVG/filters.html#feConvolveMatrixElement)\r\n\r\n```javascript\r\nfilter.convolveMatrix(matrix);\r\n//or\r\nnew SVG.ConvolveMatrixEffect(matrix);\r\n```\r\n\r\n- **matrix**: a square matrix of numbers that will be applied to the image\r\n  - exmaple:\r\n  ```javascript\r\n  [\r\n    1,0,0,\r\n    0,1,0,\r\n    0,0,1\r\n  ]\r\n  ```\r\n\r\n### DiffuseLighting\r\n\r\n[W3 doc](https://www.w3.org/TR/SVG/filters.html#feDiffuseLightingElement)\r\n\r\n```javascript\r\nfilter.displacementMap(surfaceScale, diffuseConstant, kernelUnitLength);\r\n//or\r\nnew SVG.DisplacementMapEffect(surfaceScale, diffuseConstant, kernelUnitLength);\r\n```\r\n\r\n***very complicated, just check out the W3 doc***\r\n\r\n### DisplacementMap\r\n\r\n[W3 doc](https://www.w3.org/TR/SVG/filters.html#feDisplacementMapElement)\r\n\r\n```javascript\r\nfilter.displacementMap(in1, in2, scale, xChannelSelector, yChannelSelector);\r\n//or\r\nnew SVG.DisplacementMapEffect(in1, in2, scale, xChannelSelector, yChannelSelector);\r\n```\r\n\r\n***very complicated, just check out the W3 doc***\r\n\r\n**chaining** when this effect is called right after another effect, for example:\r\n```javascript\r\nfilter.offset(20,50).displacementMap(filter.source,2)\r\n```\r\nthe first input is set to the `offset` effect and the second input is set to `filter.source` or what ever was passed as the first argument.<br>\r\nalso the second argument becomes the **scale**, and the third argument is the **xChannelSelector** and so on\r\n\r\n### Flood\r\n\r\n[W3 doc](https://www.w3.org/TR/SVG/filters.html#feFloodElement)\r\n\r\n```javascript\r\nfilter.flood(color,opacity);\r\n//or\r\nnew SVG.FloodEffect(color,opacity);\r\n```\r\n\r\n- **color**: a named or hex color in string format\r\n- **opacity**: number form 0 to 1\r\n\r\n### GaussianBlur\r\n\r\n[W3 doc](https://www.w3.org/TR/SVG/filters.html#feGaussianBlurElement)\r\n\r\n```javascript\r\nfilter.gaussianBlur(x, y);\r\n//or\r\nnew SVG.GaussianBlurEffect(x, y);\r\n```\r\n\r\n- **x**: blur on the X\r\n- **y**: blur on the y, will default to the **x** if not provided\r\n\r\n### Image\r\n\r\n[W3 doc](https://www.w3.org/TR/SVG/filters.html#feImageElement)\r\n\r\n```javascript\r\nfilter.image(src);\r\n//or\r\nnew SVG.ImageEffect(src);\r\n```\r\n\r\n### Merge\r\n\r\n[W3 doc](https://www.w3.org/TR/SVG/filters.html#feMergeElement)\r\n\r\n```javascript\r\nfilter.merge();\r\n//or\r\nnew SVG.MergeEffect();\r\n```\r\n\r\n- **Array**: an Array of effects or effect results `filter.merge([effectOne,\"result-two\",another_effect])`\r\n- **SVG.Set**: a set of effects\r\n- **arguments**: pass each effect or result in as arguments `filter.merge(effect,\"some-result\",anotherEffect)`\r\n- **chianing** you can also chian the merge effect `filter.offset(10).merge(anotherEffect)` will result in a merge effect with its first input set to the `offset` effect and its second input set to `anotherEffect`\r\n\r\n### Morphology\r\n\r\n[W3 doc](https://www.w3.org/TR/SVG/filters.html#feMorphologyElement)\r\n\r\n```javascript\r\nfilter.morphology(operator, radius);\r\n//or\r\nnew SVG.MorphologyEffect(operator, radius);\r\n```\r\n\r\n- **operator**: \"erode | dilate\"\r\n- **radius**: a single number or a string of two number sperated by a space\r\n  - the first number is the X\r\n  - the second number is the Y, if no provided it will default to the first number\r\n\r\n### Offset\r\n\r\n[W3 doc](https://www.w3.org/TR/SVG/filters.html#feOffsetElement)\r\n\r\n```javascript\r\nfilter.offset(x, y);\r\n//or\r\nnew SVG.OffsetEffect(x, y);\r\n```\r\n\r\n- **x**: move on the X\r\n- **y**: move on the y, will default to the **x** if not provided\r\n\r\n### SpecularLighting\r\n\r\n[W3 doc](https://www.w3.org/TR/SVG/filters.html#feSpecularLightingElement)\r\n\r\n```javascript\r\nfilter.specularLighting(surfaceScale, diffuseConstant, specularExponent, kernelUnitLength);\r\n//or\r\nnew SVG.SpecularLightingEffect(surfaceScale, diffuseConstant, specularExponent, kernelUnitLength);\r\n```\r\n\r\n***very complicated, just check out the W3 doc***\r\n\r\n### Tile\r\n\r\n[W3 doc](https://www.w3.org/TR/SVG/filters.html#feTileElement)\r\n\r\n```javascript\r\nfilter.tile();\r\n//or\r\nnew SVG.TileEffect();\r\n```\r\n\r\n***no arguments, but if you want to find out what it dose check out the W3 doc***\r\n\r\n### Turbulence\r\n\r\n[W3 doc](https://www.w3.org/TR/SVG/filters.html#feTurbulenceElement)\r\n\r\n```javascript\r\nfilter.turbulence(baseFrequency, numOctaves, seed, stitchTiles, type);\r\n//or\r\nnew SVG.TurbulenceEffect(baseFrequency, numOctaves, seed, stitchTiles, type);\r\n```\r\n\r\n***very complicated, just check out the W3 doc***\r\n","maintainers":[{"name":"fuzzyma","email":"ulima.ums@googlemail.com"}],"time":{"modified":"2022-06-27T02:37:23.378Z","created":"2015-05-24T20:59:08.281Z","1.0.0":"2015-05-24T20:59:08.281Z","2.0.0":"2016-02-24T01:09:10.900Z","2.0.1":"2016-02-24T16:29:33.497Z","2.0.2":"2016-02-24T17:11:06.482Z"},"homepage":"https://github.com/wout/svg.filter.js","repository":{"type":"git","url":"git+https://github.com/wout/svg.filter.js.git"},"author":{"name":"Wout Fierens"},"bugs":{"url":"https://github.com/wout/svg.filter.js/issues"},"license":"MIT","readmeFilename":"README.md","keywords":["svg.js","filter","effect"],"contributors":{"name":"Wout Fierens"}}